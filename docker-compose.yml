version: "3"
networks:
  api_server_default:
    external: true
services:
    minio:
        image: minio/minio
        networks:
            - api_server_default
        volumes:
          - data:/data
        ports:
          - "9000:9000"
        environment:
          MINIO_ACCESS_KEY: minio
          MINIO_SECRET_KEY: minio123
        command: server http://minio/data
        healthcheck:
          test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
          interval: 30s
          timeout: 20s
          retries: 3

    mongo:
        image: mongo:latest
        container_name: 'mongodb-container'
        environment:
            - MONGO_INITDB_DATABASE=data
            - MONGO_INITDB_ROOT_USERNAME=rootusername
            - MONGO_INITDB_ROOT_PASSWORD=QwertyDataUserPassword
        volumes: 
            - ./init-mongo.js:/docker-endpoint-initdb.d/initmongo.js:ro
            - ./mongo-volume:/data/db
        ports:
            27017:27017
    
    rabbitmq:
        image: rabbitmq:3-management-alpine
        container_name: rabbitmq
        volumes:
            - ./.docker/rabbitmq/etc/:/etc/rabbitmq/
            - ./.docker/rabbitmq/data/:/var/lib/rabbitmq/
            - ./.docker/rabbitmq/logs/:/var/log/rabbitmq/
        # environment:
        #     RABBITMQ_ERLANG_COOKIE: ${RABBITMQ_ERLANG_COOKIE}
        #     RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
        #     RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
        ports:
            - 5672:5672
            - 15672:15672

    node-image-api:
    networks:
      - api_server_default
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
        - minio
        - mongo
        - rabbit
    environment:
      ENV_NAME: dev
    ports:
      - 3000:3000